<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.lybgeek.orm.mybatis.dao.BookOrderMapper">
  <resultMap id="BaseResultMap" type="com.github.lybgeek.orm.mybatis.model.BookOrder">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="order_name" jdbcType="VARCHAR" property="orderName" />
    <result column="total" jdbcType="DECIMAL" property="total" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="consumer" jdbcType="VARCHAR" property="consumer" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />

    <!--使用collection这个标签可以建立关联属性。一对多关系映射，column：order_id为selectOrderWithItems查询中的order_id-->
    <collection property="bookOrderItems" ofType="com.github.lybgeek.orm.mybatis.model.BookOrderItem" column="order_id" resultMap="com.github.lybgeek.orm.mybatis.dao.BookOrderItemMapper.BaseResultMap">
    </collection>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_name, total, order_no, consumer, update_date, create_date
  </sql>
  <select id="selectByExample" parameterType="com.github.lybgeek.orm.mybatis.model.BookOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from book_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from book_order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from book_order
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.github.lybgeek.orm.mybatis.model.BookOrderExample">
    delete from book_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.github.lybgeek.orm.mybatis.model.BookOrder">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into book_order (order_name, total, order_no, 
      consumer, update_date, create_date
      )
    values (#{orderName,jdbcType=VARCHAR}, #{total,jdbcType=DECIMAL}, #{orderNo,jdbcType=VARCHAR}, 
      #{consumer,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP}, #{createDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.github.lybgeek.orm.mybatis.model.BookOrder">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into book_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderName != null">
        order_name,
      </if>
      <if test="total != null">
        total,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="consumer != null">
        consumer,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderName != null">
        #{orderName,jdbcType=VARCHAR},
      </if>
      <if test="total != null">
        #{total,jdbcType=DECIMAL},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="consumer != null">
        #{consumer,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.github.lybgeek.orm.mybatis.model.BookOrderExample" resultType="java.lang.Long">
    select count(*) from book_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update book_order
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.orderName != null">
        order_name = #{record.orderName,jdbcType=VARCHAR},
      </if>
      <if test="record.total != null">
        total = #{record.total,jdbcType=DECIMAL},
      </if>
      <if test="record.orderNo != null">
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.consumer != null">
        consumer = #{record.consumer,jdbcType=VARCHAR},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update book_order
    set id = #{record.id,jdbcType=BIGINT},
      order_name = #{record.orderName,jdbcType=VARCHAR},
      total = #{record.total,jdbcType=DECIMAL},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      consumer = #{record.consumer,jdbcType=VARCHAR},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      create_date = #{record.createDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.github.lybgeek.orm.mybatis.model.BookOrder">
    update book_order
    <set>
      <if test="orderName != null">
        order_name = #{orderName,jdbcType=VARCHAR},
      </if>
      <if test="total != null">
        total = #{total,jdbcType=DECIMAL},
      </if>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="consumer != null">
        consumer = #{consumer,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.github.lybgeek.orm.mybatis.model.BookOrder">
    update book_order
    set order_name = #{orderName,jdbcType=VARCHAR},
      total = #{total,jdbcType=DECIMAL},
      order_no = #{orderNo,jdbcType=VARCHAR},
      consumer = #{consumer,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      create_date = #{createDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectOrderWithItems" parameterType="com.github.lybgeek.orm.mybatis.model.BookOrder" resultMap="BaseResultMap">
        select
          bo.id,
          bo.order_name,
          bo.total,
          bo.order_no,
          bo.consumer,
          bo.update_date,
          bo.create_date,
          boi.id,
          boi.item_name,
          boi.price,
          boi.detail,
          boi.order_id,
          boi.create_date,
          boi.update_date
        from
          book_order bo left join book_order_item boi on bo.id = boi.order_id
        where
         1=1
     <if test="orderName != null">
       and bo.order_name like CONCAT('%',#{orderName},'%')
     </if>
    <if test="orderNo != null">
      and bo.order_no like CONCAT('%',#{orderNo},'%')
    </if>
    <if test="consumer != null">
      and bo.consumer like CONCAT('%',#{consumer},'%')
    </if>
    <if test="id != null">
      and bo.id = #{id}
    </if>
    <if test="startDate !=null and startDate !='' ">
      <![CDATA[ and bo.create_date  >=  #{startDate}  ]]>
    </if>
    <if test="endDate !=null and endDate!='' "  >
      <![CDATA[ and bo.create_date <=  #{endDate}  ]]>
    </if>
  <!--  <if test="bookOrderItems!=null and bookOrderItems.size() > 0">
      AND boi.id in
      <foreach collection="bookOrderItems" item="item"
               index="index" open="(" close=")" separator=",">
        #{item.id}
      </foreach>
    </if>-->
  </select>
</mapper>